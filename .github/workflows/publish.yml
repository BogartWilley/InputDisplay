name: Publish

on:
    workflow_dispatch:
        inputs:
            sign:
                description: 'Cert Sign'
                type: boolean
                required: false
                default: true

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    GITHUB_ACTIONS: true

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            Version: ${{ steps.gitversion.outputs.SemVer }}
            CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
            ZipFile: input_display_${{ steps.gitversion.outputs.SemVer  }}.zip

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.10.2
              with:
                  versionSpec: 5.x

            - name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.10.2
              id: gitversion

            - name: Display GitVersion outputs
              run: |
                  echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
                  echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v2
              with:
                  global-json-file: global.json

            - name: Build and Publish Package
              run: |
                  publish() {
                    dotnet publish src/InputDisplay --configuration Release --self-contained -r $1  -p:DebugType=None -p:DebugSymbols=false -p:Version='${{ steps.gitversion.outputs.SemVer }}' --output "./Publish/$1"
                  }

                  publish "win-x64"
                  publish "linux-x64"
                  publish "osx-x64"

            - name: Zip Package
              run: cd ./Publish; zip -r ../input_display_${{ steps.gitversion.outputs.SemVer  }}.zip *

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: app
                  path: ./input_display_${{ steps.gitversion.outputs.SemVer }}.zip

    sign:
        runs-on: windows-latest
        needs: build
        if: github.event.inputs.sign == 'true'
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: app

            - name: Unzip Package
              run: Expand-Archive -Path .\${{ needs.build.outputs.ZipFile }} -DestinationPath .\Publish

            - name: Sign exe
              uses: markeytos/code-sign-action@v1.01
              with:
                  certificate: '${{ secrets.CERTIFICATE }}'
                  password: '${{ secrets.PASSWORD }}'
                  certificatesha1: '${{ secrets.CERTIFICATESHA1 }}'
                  folder: .\Publish\win-x64
                  timestampUrl: 'http://timestamp.digicert.com'
                  recursive: true

            - name: Zip Package
              run: |
                  Remove-Item .\${{ needs.build.outputs.ZipFile }}
                  Compress-Archive -Path ./Publish/* -Destination ${{ needs.build.outputs.ZipFile }}

            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v3
              with:
                  name: app
                  path: ${{ needs.build.outputs.ZipFile }}

    release:
        runs-on: ubuntu-latest
        needs:
            - build
            - sign
        if: |
            always() &&
            needs.build.result == 'success'
            && (needs.sign.result == 'success' || needs.sign.result == 'skipped')
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: app

#            - name: Create Release
#              uses: ncipollo/release-action@v1
#              with:
#                  tag: ${{ needs.build.outputs.Version }}
#                  name: Release ${{ needs.build.outputs.Version }}
#                  artifacts: "app/*"
#                  token: ${{ secrets.GITHUB_TOKEN }}
