name: Publish

on:
    workflow_dispatch:

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    GITHUB_ACTIONS: true

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            Version: ${{ steps.gitversion.outputs.SemVer }}
            CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.9.7
              with:
                  versionSpec: 5.x

            - name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.9.7
              id: gitversion

            - name: Display GitVersion outputs
              run: |
                  echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
                  echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v2
              with:
                  global-json-file: global.json

            - name: Build and Publish Package
              run: dotnet publish src/InputDisplay --configuration Release --self-contained -r win-x64  -p:DebugType=None -p:DebugSymbols=false -p:Version='${{ steps.gitversion.outputs.SemVer }}' --output ./Publish

            - name: Zip Package
              run: cd ./Publish; zip -r ../input_display_${{ steps.gitversion.outputs.SemVer  }}.zip *

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: app
                  path: ./input_display_${{ steps.gitversion.outputs.SemVer  }}.zip

    release:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master' && needs.build.outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change
        needs: build

        steps:
            - name: Download lib nuget package artifact
              uses: actions/download-artifact@v1.0.0
              with:
                  name: app

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ needs.build.outputs.Version }}
                  name: Release ${{ needs.build.outputs.Version }}
                  artifacts: "app/*"
                  token: ${{ secrets.GITHUB_TOKEN }}
